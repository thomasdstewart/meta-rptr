#!/usr/bin/env python3
import logging
import evdev
import urllib.request
import sys
from pprint import pprint as pp

logging.basicConfig(level=logging.INFO,
                    format="%(levelname)s %(asctime)s %(message)s")

logging.info("listing devices")
devices = [evdev.InputDevice(fn) for fn in evdev.list_devices()]

flirc = None
for dev in devices:
    if('flirc.tv flirc Consumer Control' in dev.name):
        flirc = dev.fn
        logging.info("found device: %s" % flirc)

if flirc is None:
    logging.info("device not found")
    sys.exit()

logging.info("opening device: %s" % flirc)
dev = evdev.InputDevice(flirc)

logging.info("reading events")
for event in dev.read_loop():
    if(event.type == evdev.ecodes.EV_KEY and event.value == 1):
        key = evdev.ecodes.KEY[event.code]
        logging.info("got key: %s" % key)

        #Flirc-3.25.3 my_flirc_config in base64
        #ACO1kAVixQ8Os2a7gP14tGY7vJu4t2YiqzY7zWZ7ZiSm6mY=

        if(key == 'KEY_FASTFORWARD'):
            cmd = 'fastforward'

        if(key == 'KEY_PLAYPAUSE'):
            cmd = 'play'

        if(key == 'KEY_REWIND'):
            cmd = 'rewind'

        if(key == 'KEY_STOPCD'):
            cmd = 'stop'

        #if(key == 'KEY_RECORD'):
        #    cmd = 'record'

        if(key == 'KEY_VOLUMEDOWN'):
            cmd = 'pause'

        url = 'http://localhost/%s' % cmd

        logging.info("requesting: %s" % url)

        req = urllib.request.Request(url)
        try:
            res = urllib.request.urlopen(req)
            logging.info("response: %s" % res.read())
        except urllib.error.URLError as e:
            logging.info("error: %s" % e.reason)

