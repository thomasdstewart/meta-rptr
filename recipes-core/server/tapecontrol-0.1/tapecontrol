#!/usr/bin/env python3
import logging
from flask import Flask
import RPi.GPIO as GPIO
import time
import sys
from pprint import pprint as pp

logging.basicConfig(level=logging.INFO,
                    format="%(levelname)s %(asctime)s %(message)s")

pins = {}
pins['enable'] = 4
pins['fastforward'] = 17
pins['play'] = 18
pins['rewind'] = 22
pins['stop'] = 23
pins['record'] = 24
pins['pause'] = 25

func_pins = list(pins.values())
func_pins.remove(pins['enable'])

on = GPIO.LOW
off = GPIO.HIGH

def init():
    logging.info("disable GPIO warnings")
    GPIO.setwarnings(False)

    logging.info("setting pin mode to bcm")
    GPIO.setmode(GPIO.BCM)

    logging.info("set all relays to in mode") # switches off
    GPIO.setup(func_pins, GPIO.IN)
    logging.info("sleeping")
    time.sleep(0.1)

    logging.info("set enable relay to out mode")
    GPIO.setup(pins['enable'], GPIO.OUT)
    logging.info("sleeping")
    time.sleep(0.1)

    logging.info("turn off enable relay")
    GPIO.output(pins['enable'], off)
    logging.info("sleeping")
    time.sleep(0.1)

    logging.info("set all other relays to out mode")
    GPIO.setup(func_pins, GPIO.OUT)
    logging.info("sleeping")
    time.sleep(0.1)

    logging.info("turn off all other relays")
    GPIO.output(func_pins, off)
    logging.info("sleeping")
    time.sleep(0.1)

    logging.info("turn on enable relay")
    GPIO.output(pins['enable'], on)
    logging.info("sleeping")
    time.sleep(0.1)

def clean():
    GPIO.output(pins['enable'], off)
    GPIO.cleanup()

def togglecmd(cmd):
    cmds = ['fastforward', 'play', 'rewind', 'stop', 'record', 'pause']
    if(cmd not in cmds):
        logging.info("unknown cmd: %s" % cmd)
        return

    logging.info("got cmd: %s" % cmd)

    logging.info("turning %s relay on" % cmd)
    GPIO.output(pins[cmd], on)
    logging.info("sleeping")
    time.sleep(0.2)

    logging.info("turning %s relay off" % cmd)
    GPIO.output(pins[cmd], off)
    logging.info("sleeping")
    time.sleep(0.2)

html='''
<p>
<a href=/play>play</a>
<a href=/pause>pause</a>
<a href=/stop>stop</a>
<a href=/fastforward>fastforward</a>
<a href=/rewind>rewind</a>
<a href=/record>record</a>
</p>
'''

app = Flask(__name__)

@app.route('/')
def help():
    return html

@app.route('/<cmd>')
def docmd(cmd):
    togglecmd(cmd)

    return '%s<br><p>cmd: %s</p>' % (html, cmd) 

if __name__ == '__main__':
    logging.info("initializing")
    init() 
    app.debug = True
    logging.info("listening")
    app.run(host='0.0.0.0', port=80, use_reloader=False)
    clean()

